swagger: "2.0"
info:
  version: "0.0.1"
  title: Server Monitor API
  description: Monitor your server status
# during dev, should point to your local machine
host: localhost:10010
# basePath prefixes all resource paths 
basePath: /
# 
schemes:
  # tip: remove http to make production-grade
  - http
  - https
# format of bodies a client can send (Content-Type)
consumes:
  - application/json
# format of the responses to the client (Accepts)
produces:
  - application/json
paths:
  /monitors:
    x-swagger-router-controller: monitors
    get:
      operationId: getMonitorList
      summary: Monitor Types
      description: |
        The Monitors endpoint returns information about the monitors available
        for a given server. The response includes the display name and other
        details about each monitor.
      tags:
        - Monitor
      responses:
        '200':
          description: An array of monitors
          schema:
            type: array
            items:
              $ref: "#/definitions/Monitor"
        '406':
          description: Negotiation not acceptable.
          schema:
            $ref: "#/definitions/Error"
        default:
          description: Unexpected error
          schema:
            $ref: "#/definitions/Error"
  /monitors.html:
    x-swagger-router-controller: monitors
    get:
      operationId: getMonitorListAsHtml
      summary: Monitor Types as HTML
      description: |
        The Monitors endpoint returns information about the monitors available
        for a given server. The response includes the display name and other
        details about each monitor.
      produces:
        - text/html
      tags:
        - Monitor
      responses:
        '200':
          description: An array of monitors
          schema:
            type: string
        '406':
          description: Negotiation not acceptable.
          schema:
            $ref: "#/definitions/Error"
        default:
          description: Unexpected error
          schema:
            $ref: "#/definitions/Error"
  "/monitors/{monitorId}":
    x-swagger-router-controller: monitors
    parameters:
      - name: monitorId
        type: string
        in: path
        description: ID of the monitor.
        required: true
    get:
      operationId: getMonitor
      summary: Information about a given monitor.
      description: Shows all the details regarding the monitor.
      tags:
        - Monitor
      responses:
        200:
          description: Details of the given monitor.
          schema:
            $ref: "#/definitions/Monitor"
        406:
          description: Negotiation not acceptable.
          schema:
            $ref: "#/definitions/Error"
        404:
          description: Monitor not found.
          schema:
            $ref: "#/definitions/Error"
        default:
          description: Unexpected error
          schema:
            $ref: "#/definitions/Error"
  "/monitors/{monitorId}/metrics":
    x-swagger-router-controller: metrics
    parameters:
      - name: monitorId
        in: path
        type: string
        description: ID of the monitor.
        required: true
    get:
      operationId: getMetricList
      summary: List of monitor metrics.
      description: Get a list of current metrics for a given monitor.
      tags:
        - Metric
      responses:
        200:
          description: 'Lists the metrics for monitor ID.'
          schema:
            type: array
            items:
              $ref: "#/definitions/Metric"
        406:
          description: Negotiation not acceptable.
          schema:
            $ref: "#/definitions/Error"
        404:
          description: Monitor not found.
          schema:
            $ref: "#/definitions/Error"
        default:
          description: Unexpected error
          schema:
            $ref: "#/definitions/Error"
    post:
      operationId: enableMetric
      summary: Setup a new metric.
      description: Sets a new metric to monitor that will be appended to any existing metrics.
      parameters:
        - name: metric
          in: body
          description: New metric to monitor.
          required: true
          schema:
            $ref: "#/definitions/Metric"
      tags:
        - Metric
      responses:
        201:
          description: Metrics successfully setup.
          schema:
            $ref: "#/definitions/Metric"
        406:
          description: Negotiation not acceptable.
          schema:
            $ref: "#/definitions/Error"
        404:
          description: Monitor not found.
          schema:
            $ref: "#/definitions/Error"
        409:
          description: Metric already enabled.
          schema:
            $ref: "#/definitions/Error"
        400:
          description: Invalid metric.
          schema:
            $ref: "#/definitions/Error"
        default:
          description: Unexpected error
          schema:
            $ref: "#/definitions/Error"
    delete:
      operationId: disableMonitor
      summary: Stop monitoring metrics.
      description: Deletes all metrics for a given monitor.
      tags:
        - Metric
      responses:
        200:
          description: Metrics successfully deleted.
          schema:
            type: array
            items:
              $ref: "#/definitions/Metric"
        406:
          description: Negotiation not acceptable.
          schema:
            $ref: "#/definitions/Error"
        404:
          description: Monitor not found.
          schema:
            $ref: "#/definitions/Error"
        default:
          description: Unexpected error
          schema:
            $ref: "#/definitions/Error"
  "/monitors/{monitorId}/metrics/{metricId}":
    x-swagger-router-controller: metrics
    parameters:
      - name: monitorId
        in: path
        type: string
        description: ID of the monitor.
        required: true
      - name: metricId
        in: path
        type: string
        description: ID of the metric.
        required: true
    get:
      operationId: getMetric
      summary: Get metric attributes.
      description: Gets the current values of metric attibutes.
      tags:
        - Metric
      responses:
        200:
          description: Metric attributes.
          schema:
            $ref: "#/definitions/Metric"
        406:
          description: Negotiation not acceptable.
          schema:
            $ref: "#/definitions/Error"
        404:
          description: Monitor and or metric not found.
          schema:
            $ref: "#/definitions/Error"
        default:
          description: Unexpected error
          schema:
            $ref: "#/definitions/Error"
    put:
      operationId: updateMetric
      summary: Update metric attributes.
      description: Modifies the metric attibutes with new values.
      parameters:
        - name: metric
          in: body
          description: Metric with updated attributes.
          required: true
          schema:
            $ref: "#/definitions/Metric"
      tags:
        - Metric
      responses:
        200:
          description: Metrics successfully updated.
          schema:
            $ref: "#/definitions/Metric"
        406:
          description: Negotiation not acceptable.
          schema:
            $ref: "#/definitions/Error"
        404:
          description: Monitor and or metric not found.
          schema:
            $ref: "#/definitions/Error"
        409:
          description: Metric ID mismatch.
          schema:
            $ref: "#/definitions/Error"
        400:
          description: Invalid metric.
          schema:
            $ref: "#/definitions/Error"
        default:
          description: Unexpected error
          schema:
            $ref: "#/definitions/Error"
    delete:
      operationId: disableMetric
      summary: Delete metric in a monitor.
      description: Deletes the metric from a monitor.
      tags:
        - Metric
      responses:
        200:
          description: Metric successfully deleted.
          schema:
            $ref: "#/definitions/Metric"
        406:
          description: Negotiation not acceptable.
          schema:
            $ref: "#/definitions/Error"
        404:
          description: Monitor and or metric not found.
          schema:
            $ref: "#/definitions/Error"
        default:
          description: Unexpected error
          schema:
            $ref: "#/definitions/Error"
  /datasets:
    x-swagger-router-controller: datasets
    parameters:
      - name: monitor
        in: query
        type: string
        description: Filter by monitor.
        required: true
      - name: metric
        in: query
        type: string
        description: Filter by metric.
        required: true
      - name: begin
        in: query
        type: string
        description: Where does the query start from.
        required: true
      - name: end
        in: query
        type: string
        description: Where does the query end.
        required: true
      - name: limit
        in: query
        type: string
        description: 'Number of items to retrieve. Default is 5, maximum is 100.'
        required: true
    get:
      operationId: findDataSet
      summary: Monitor activity
      description: "The User Activity endpoint returns data about a user's lifetime activity with Uber. The response will include pickup locations and times, dropoff locations and times, the distance of past requests, and information about which products were requested.<br><br>The history array in the response will have a maximum length based on the limit parameter. The response value count may exceed limit, therefore subsequent API requests may be necessary."
      tags:
        - DataSet
      responses:
        '200':
          description: History information for the given user
          schema:
            $ref: "#/definitions/DataSet"
        '406':
          description: Negotiation not acceptable.
          schema:
            $ref: "#/definitions/Error"
        default:
          description: Unexpected error
          schema:
            $ref: "#/definitions/Error"
  /swagger:
    x-swagger-pipe: swagger_raw
# complex objects have schema definitions
definitions:
  Metric:
    type: object
    properties:
      name:
        type: string
        description: Name of the metric.
      interval:
        type: integer
        format: int64
        description: Number of seconds between metric updates.
      retention:
        type: integer
        format: int64
        description: Number of seconds of TTL.
  Monitor:
    type: object
    properties:
      name:
        type: string
        description: Name of the monitor for a given server. For example, CPU or memory.
      description:
        type: string
        description: Description of monitor.
      metrics:
        type: array
        items:
          $ref: "#/definitions/Metric"
  DataPoint:
    type: object
    properties:
      monitor:
        type: string
        description: Monitor name for this data point.
      metric:
        type: string
        description: Metric name for this data point.
      timestamp:
        type: integer
        format: int64
        description: Time when the metric was recorded.
      value:
        type: number
        description: Metric numeric value at a given time.
  Filter:
    type: object
    properties:
      monitor:
        type: string
        description: Name of the monitor
      metric:
        type: string
        description: Name of the metric for a given monitor.
      begin:
        type: integer
        format: int64
        description: Where does the query start from.
      end:
        type: integer
        format: int64
        description: Where does the query end.
      limit:
        type: integer
        format: int64
        description: Maximum numer of elements per dataset.
  DataSet:
    type: object
    properties:
      filter:
        $ref: "#/definitions/Filter"
      values:
        type: array
        items:
          $ref: "#/definitions/DataPoint"
  Error:
    type: object
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
