---
swagger: "2.0"
info:
  description: "Monitor your server status API"
  version: "1.0.0"
  title: "Server Monitor API"
host: "localhost:8000"
basePath: "/api/v1"
schemes:
- "http"
produces:
- "application/json"
paths:
  /datasets:
    get:
      tags:
      - "DataSet"
      summary: "Monitor activity"
      description: "The User Activity endpoint returns data about a user's lifetime\
        \ activity with Uber. The response will include pickup locations and times,\
        \ dropoff locations and times, the distance of past requests, and information\
        \ about which products were requested.<br><br>The history array in the response\
        \ will have a maximum length based on the limit parameter. The response value\
        \ count may exceed limit, therefore subsequent API requests may be necessary."
      operationId: "datasetsGET"
      parameters:
      - name: "monitor"
        in: "query"
        description: "Filter by monitor."
        required: false
        type: "string"
      - name: "metric"
        in: "query"
        description: "Filter by metric."
        required: false
        type: "string"
      - name: "begin"
        in: "query"
        description: "Where does the query start from."
        required: false
        type: "integer"
        format: "int64"
      - name: "end"
        in: "query"
        description: "Where does the query end."
        required: false
        type: "integer"
        format: "int64"
      - name: "limit"
        in: "query"
        description: "Number of items to retrieve. Default is 5, maximum is 100."
        required: false
        type: "integer"
        format: "int64"
      responses:
        200:
          description: "History information for the given user"
          schema:
            $ref: "#/definitions/DataSet"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "DataSet"
  /monitors:
    get:
      tags:
      - "Monitor"
      summary: "Monitor Types"
      description: "The Monitors endpoint returns information about the monitors available\n\
        for a given server. The response includes the display name and other\ndetails\
        \ about each monitor.\n"
      operationId: "monitorsGET"
      parameters: []
      responses:
        200:
          description: "An array of monitors"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Monitor"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Monitor"
  /monitors/{monitorId}:
    get:
      tags:
      - "Monitor"
      summary: "Information about a given monitor."
      description: "Shows all the details regarding the monitor."
      operationId: "monitorsMonitorIdGET"
      parameters:
      - name: "monitorId"
        in: "path"
        description: "ID of the monitor."
        required: true
        type: "string"
      responses:
        200:
          description: "Details of the given monitor."
          schema:
            $ref: "#/definitions/Monitor"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Monitor"
  /monitors/{monitorId}/metrics:
    get:
      tags:
      - "Metric"
      summary: "List of monitor metrics."
      description: "Get a list of current metrics for a given monitor."
      operationId: "monitorsMonitorIdMetricsGET"
      parameters:
      - name: "monitorId"
        in: "path"
        description: "ID of the monitor."
        required: true
        type: "string"
      responses:
        200:
          description: "Lists the metrics for monitor ID."
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Metric"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Metric"
    post:
      tags:
      - "Metric"
      summary: "Setup a new metric."
      description: "Sets a new metric to monitor that will be appended to any existing\
        \ metrics."
      operationId: "monitorsMonitorIdMetricsPOST"
      parameters:
      - name: "monitorId"
        in: "path"
        description: "ID of the monitor."
        required: true
        type: "string"
      - in: "body"
        name: "metric"
        description: "New metric to monitor."
        required: true
        schema:
          $ref: "#/definitions/Metric"
      responses:
        201:
          description: "Metrics successfully setup."
          schema:
            $ref: "#/definitions/Metric"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Metric"
    delete:
      tags:
      - "Metric"
      summary: "Stop monitoring metrics."
      description: "Deletes all metrics for a given monitor."
      operationId: "monitorsMonitorIdMetricsDELETE"
      parameters:
      - name: "monitorId"
        in: "path"
        description: "Delete given monitor metrics."
        required: true
        type: "string"
      responses:
        200:
          description: "Metrics successfully deleted."
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Metric"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Metric"
  /monitors/{monitorId}/metrics/{metricId}:
    get:
      tags:
      - "Metric"
      summary: "Get metric attributes."
      description: "Gets the current values of metric attibutes."
      operationId: "monitorsMonitorIdMetricsMetricIdGET"
      parameters:
      - name: "monitorId"
        in: "path"
        description: "ID of the monitor."
        required: true
        type: "string"
      - name: "metricId"
        in: "path"
        description: "ID of the metric."
        required: true
        type: "string"
      responses:
        200:
          description: "Metric attributes."
          schema:
            $ref: "#/definitions/Metric"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Metric"
    put:
      tags:
      - "Metric"
      summary: "Update metric attributes."
      description: "Modifies the metric attibutes with new values."
      operationId: "monitorsMonitorIdMetricsMetricIdPUT"
      parameters:
      - name: "monitorId"
        in: "path"
        description: "ID of the monitor."
        required: true
        type: "string"
      - name: "metricId"
        in: "path"
        description: "Updated attributes for a given metric in a monitor."
        required: true
        type: "string"
      - in: "body"
        name: "metric"
        description: "Metric with updated attributes."
        required: true
        schema:
          type: "array"
          items:
            $ref: "#/definitions/Metric"
      responses:
        200:
          description: "Metrics successfully updated."
          schema:
            $ref: "#/definitions/Metric"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Metric"
    delete:
      tags:
      - "Metric"
      summary: "Delete metric in a monitor."
      description: "Deletes the metric from a monitor."
      operationId: "monitorsMonitorIdMetricsMetricIdDELETE"
      parameters:
      - name: "monitorId"
        in: "path"
        description: "ID of the monitor."
        required: true
        type: "string"
      - name: "metricId"
        in: "path"
        description: "Updated attributes for a given metric in a monitor."
        required: true
        type: "string"
      responses:
        200:
          description: "Metric successfully deleted."
          schema:
            $ref: "#/definitions/Metric"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Metric"
definitions:
  Metric:
    type: "object"
    properties:
      name:
        type: "string"
        description: "Name of the metric."
      interval:
        type: "integer"
        format: "int64"
        description: "Number of seconds between metric updates."
      retention:
        type: "integer"
        format: "int64"
        description: "Number of seconds of TTL."
  Monitor:
    type: "object"
    properties:
      name:
        type: "string"
        description: "Name of the monitor for a given server. For example, CPU or\
          \ memory."
      description:
        type: "string"
        description: "Description of monitor."
      metrics:
        type: "array"
        items:
          $ref: "#/definitions/Metric"
  DataPoint:
    type: "object"
    properties:
      monitor:
        type: "string"
        description: "Monitor name for this data point."
      metric:
        type: "string"
        description: "Metric name for this data point."
      timestamp:
        type: "integer"
        format: "int64"
        description: "Time when the metric was recorded."
      value:
        type: "number"
        description: "Metric numeric value at a given time."
  Filter:
    type: "object"
    properties:
      monitor:
        type: "string"
        description: "Name of the monitor"
      metric:
        type: "string"
        description: "Name of the metric for a given monitor."
      begin:
        type: "integer"
        format: "int64"
        description: "Where does the query start from."
      end:
        type: "integer"
        format: "int64"
        description: "Where does the query end."
      limit:
        type: "integer"
        format: "int64"
        description: "Maximum numer of elements per dataset."
  DataSet:
    type: "object"
    properties:
      filter:
        $ref: "#/definitions/Filter"
      values:
        type: "array"
        items:
          $ref: "#/definitions/DataPoint"
  Error:
    type: "object"
    properties:
      code:
        type: "integer"
        format: "int32"
      message:
        type: "string"
